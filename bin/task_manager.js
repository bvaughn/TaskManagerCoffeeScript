// Generated by CoffeeScript 1.6.2
var CompositeTask, Task, TaskWithClosure,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Task = (function() {
  Task.id = 0;

  Task.prototype.id = 0;

  Task.prototype.running = false;

  function Task() {
    this.id = ++Task.id;
  }

  Task.prototype.customRun = function() {
    return console.log("Not defined");
  };

  Task.prototype.run = function() {
    this.running = true;
    this.customRun();
    return this.running = false;
  };

  return Task;

})();

TaskWithClosure = (function(_super) {
  __extends(TaskWithClosure, _super);

  function TaskWithClosure(closure) {
    this.closure = closure;
    TaskWithClosure.__super__.constructor.apply(this, arguments);
  }

  TaskWithClosure.prototype.customRun = function() {
    return this.closure();
  };

  return TaskWithClosure;

})(Task);

CompositeTask = (function(_super) {
  __extends(CompositeTask, _super);

  function CompositeTask(tasks) {
    this.tasks = tasks;
    CompositeTask.__super__.constructor.apply(this, arguments);
  }

  CompositeTask.prototype.customRun = function() {
    var task, _i, _len, _ref, _results;

    _ref = this.tasks;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      task = _ref[_i];
      _results.push(task.run());
    }
    return _results;
  };

  return CompositeTask;

})(Task);
